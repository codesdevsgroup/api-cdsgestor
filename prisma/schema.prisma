generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  username        String    @unique
<<<<<<< HEAD
  cpf             String?
=======
  cpf             String
>>>>>>> 59fd1ff0491e0a9eddf715ed71ae3e96d79f5f03
  password        String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  role            Int       @default(1)
  personId        Int?      @unique
  person          Person?   @relation(fields: [personId], references: [id])
  companyConfigId Int?

  @@map("users")
}

model Person {
  id          Int        @id @default(autoincrement())
  name        String
  fantasyName String?
  type        PersonType
  cpf         String?
  cnpj        String?
  ie          String?
  email       String?
  phone1      String?
  phone2      String?
  birthDate   DateTime?
  notes       String?
  delinquent  Boolean    @default(false)
  photo       String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  deletedAt   DateTime?
  users       User[]
  addresses   Address[]

  @@map("person")
}

enum PersonType {
  INDIVIDUAL
  COMPANY
  RURAL_PRODUCER
}

model Address {
  id           Int       @id @default(autoincrement())
  place        String
  number       String
  neighborhood String
  city         String
  state        String
  zipCode      String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  deletedAt    DateTime?
  personId     Int
  person       Person    @relation(fields: [personId], references: [id])

  @@map("address")
}

model Company {
  id           Int           @id @default(autoincrement())
  name         String
  email        String
  mobile       String
  phone1       String?
  phone2       String?
  place        String
  number       String
  neighborhood String
  city         String
  state        String
  zipCode      String
  workingHours WorkingHour[]

  @@map("company")
}

model WorkingHour {
  id         Int       @id @default(autoincrement())
  day        Weekday
  open       DateTime
  close      DateTime
  lunchStart DateTime?
  lunchEnd   DateTime?
  companyId  Int
  company    Company   @relation(fields: [companyId], references: [id])

  @@map("working_hours")
}

enum Weekday {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}
